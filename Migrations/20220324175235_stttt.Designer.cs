// <auto-generated />
using System;
using DemoWebApi.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DemoWebApi.Migrations
{
    [DbContext(typeof(MyDBContext))]
    [Migration("20220324175235_stttt")]
    partial class stttt
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DemoWebApi.DAL.department", b =>
                {
                    b.Property<string>("deptid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("deptname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("deptid");

                    b.ToTable("department");
                });

            modelBuilder.Entity("DemoWebApi.DAL.items", b =>
                {
                    b.Property<string>("itemcode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal?>("cost")
                        .HasColumnType("decimal(18,4)");

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2");

                    b.Property<string>("deptid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("itemname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("picture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("rate")
                        .HasColumnType("decimal(18,4)");

                    b.HasKey("itemcode");

                    b.HasIndex("deptid");

                    b.ToTable("items");
                });

            modelBuilder.Entity("DemoWebApi.DAL.party", b =>
                {
                    b.Property<string>("partyId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("partyname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("partyId");

                    b.ToTable("parties");
                });

            modelBuilder.Entity("DemoWebApi.DAL.purchasedetails", b =>
                {
                    b.Property<string>("purchaseId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("slno")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal?>("costprice")
                        .HasColumnType("decimal(18,4)");

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2");

                    b.Property<string>("itemcode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("qty")
                        .HasColumnType("int");

                    b.Property<decimal?>("total")
                        .HasColumnType("decimal(18,4)");

                    b.HasKey("purchaseId", "slno");

                    b.HasIndex("itemcode");

                    b.ToTable("purchasedetails");
                });

            modelBuilder.Entity("DemoWebApi.DAL.purchasemaster", b =>
                {
                    b.Property<string>("purchaseId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("discount")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal?>("due")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal?>("net")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal?>("paid")
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("partyId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal?>("total")
                        .HasColumnType("decimal(18,4)");

                    b.HasKey("purchaseId");

                    b.HasIndex("partyId");

                    b.ToTable("purchasemasters");
                });

            modelBuilder.Entity("DemoWebApi.DAL.salesdetails", b =>
                {
                    b.Property<string>("saleId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("slno")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal?>("costprice")
                        .HasColumnType("decimal(18,4)");

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2");

                    b.Property<string>("itemcode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("qty")
                        .HasColumnType("int");

                    b.Property<decimal?>("total")
                        .HasColumnType("decimal(18,4)");

                    b.HasKey("saleId", "slno");

                    b.HasIndex("itemcode");

                    b.ToTable("salesdetails");
                });

            modelBuilder.Entity("DemoWebApi.DAL.salesemaster", b =>
                {
                    b.Property<string>("saleId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("discount")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal?>("due")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal?>("net")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal?>("paid")
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("partyId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal?>("total")
                        .HasColumnType("decimal(18,4)");

                    b.HasKey("saleId");

                    b.HasIndex("partyId");

                    b.ToTable("salesemasters");
                });

            modelBuilder.Entity("DemoWebApi.DAL.storeledger", b =>
                {
                    b.Property<string>("slno")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2");

                    b.Property<int>("issue")
                        .HasColumnType("int");

                    b.Property<string>("narration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("received")
                        .HasColumnType("int");

                    b.Property<int>("valance")
                        .HasColumnType("int");

                    b.Property<string>("vono")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("slno");

                    b.ToTable("storeledgers");
                });

            modelBuilder.Entity("DemoWebApi.DAL.items", b =>
                {
                    b.HasOne("DemoWebApi.DAL.department", "department")
                        .WithMany("items")
                        .HasForeignKey("deptid");

                    b.Navigation("department");
                });

            modelBuilder.Entity("DemoWebApi.DAL.purchasedetails", b =>
                {
                    b.HasOne("DemoWebApi.DAL.items", "items")
                        .WithMany("purchasedetails")
                        .HasForeignKey("itemcode");

                    b.HasOne("DemoWebApi.DAL.purchasemaster", "purchasemaster")
                        .WithMany("purchasedetails")
                        .HasForeignKey("purchaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("items");

                    b.Navigation("purchasemaster");
                });

            modelBuilder.Entity("DemoWebApi.DAL.purchasemaster", b =>
                {
                    b.HasOne("DemoWebApi.DAL.party", "party")
                        .WithMany("purchasemaster")
                        .HasForeignKey("partyId");

                    b.Navigation("party");
                });

            modelBuilder.Entity("DemoWebApi.DAL.salesdetails", b =>
                {
                    b.HasOne("DemoWebApi.DAL.items", "items")
                        .WithMany("salesdetails")
                        .HasForeignKey("itemcode");

                    b.HasOne("DemoWebApi.DAL.salesemaster", "salesemaster")
                        .WithMany("salesdetails")
                        .HasForeignKey("saleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("items");

                    b.Navigation("salesemaster");
                });

            modelBuilder.Entity("DemoWebApi.DAL.salesemaster", b =>
                {
                    b.HasOne("DemoWebApi.DAL.party", "party")
                        .WithMany("salesemaster")
                        .HasForeignKey("partyId");

                    b.Navigation("party");
                });

            modelBuilder.Entity("DemoWebApi.DAL.department", b =>
                {
                    b.Navigation("items");
                });

            modelBuilder.Entity("DemoWebApi.DAL.items", b =>
                {
                    b.Navigation("purchasedetails");

                    b.Navigation("salesdetails");
                });

            modelBuilder.Entity("DemoWebApi.DAL.party", b =>
                {
                    b.Navigation("purchasemaster");

                    b.Navigation("salesemaster");
                });

            modelBuilder.Entity("DemoWebApi.DAL.purchasemaster", b =>
                {
                    b.Navigation("purchasedetails");
                });

            modelBuilder.Entity("DemoWebApi.DAL.salesemaster", b =>
                {
                    b.Navigation("salesdetails");
                });
#pragma warning restore 612, 618
        }
    }
}
